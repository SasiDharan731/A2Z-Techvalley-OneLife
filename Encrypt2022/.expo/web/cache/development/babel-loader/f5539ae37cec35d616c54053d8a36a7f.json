{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { SyntheticPlatformEmitter } from 'expo-modules-core';\nimport { assertSensorEventEnabledAsync, getPermissionsAsync, isSensorEnabledAsync, requestPermissionsAsync } from \"./utils/isSensorEnabledAsync.web\";\nvar eventName = 'devicemotion';\nexport default {\n  get name() {\n    return 'ExponentGyroscope';\n  },\n\n  isAvailableAsync: function () {\n    var _isAvailableAsync = _asyncToGenerator(function* () {\n      if (typeof DeviceMotionEvent === 'undefined') {\n        return false;\n      }\n\n      return yield isSensorEnabledAsync(eventName);\n    });\n\n    function isAvailableAsync() {\n      return _isAvailableAsync.apply(this, arguments);\n    }\n\n    return isAvailableAsync;\n  }(),\n  _handleMotion: function _handleMotion(_ref) {\n    var accelerationIncludingGravity = _ref.accelerationIncludingGravity;\n    SyntheticPlatformEmitter.emit('gyroscopeDidUpdate', {\n      x: accelerationIncludingGravity.x,\n      y: accelerationIncludingGravity.y,\n      z: accelerationIncludingGravity.z\n    });\n  },\n  getPermissionsAsync: getPermissionsAsync,\n  requestPermissionsAsync: requestPermissionsAsync,\n  startObserving: function startObserving() {\n    assertSensorEventEnabledAsync(eventName);\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving: function stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  }\n};","map":{"version":3,"mappings":";AAAA,SAASA,wBAAT,QAAyC,mBAAzC;AAEA,SACEC,6BADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,uBAJF;AAOA,IAAMC,SAAS,GAAG,cAAlB;AAEA,eAAe;EACb,IAAIC,IAAJ,GAAQ;IACN,OAAO,mBAAP;EACD,CAHY;;EAIPC,gBAJO;IAAA,uDAIS;MACpB,IAAI,OAAOC,iBAAP,KAA6B,WAAjC,EAA8C;QAC5C,OAAO,KAAP;MACD;;MACD,aAAaL,oBAAoB,CAACE,SAAD,CAAjC;IACD,CATY;;IAAA;MAAA;IAAA;;IAAA;EAAA;EAUbI,aAVa,+BAUiC;IAAA,IAA9BC,4BAA8B,QAA9BA,4BAA8B;IAC5CV,wBAAwB,CAACW,IAAzB,CAA8B,oBAA9B,EAAoD;MAClDC,CAAC,EAAEF,4BAA4B,CAACE,CADkB;MAElDC,CAAC,EAAEH,4BAA4B,CAACG,CAFkB;MAGlDC,CAAC,EAAEJ,4BAA4B,CAACI;IAHkB,CAApD;EAKD,CAhBY;EAiBbZ,mBAAmB,EAAnBA,mBAjBa;EAkBbE,uBAAuB,EAAvBA,uBAlBa;EAmBbW,cAnBa,4BAmBC;IACZd,6BAA6B,CAACI,SAAD,CAA7B;IAEAW,MAAM,CAACC,gBAAP,CAAwBZ,SAAxB,EAAmC,KAAKI,aAAxC;EACD,CAvBY;EAwBbS,aAxBa,2BAwBA;IACXF,MAAM,CAACG,mBAAP,CAA2Bd,SAA3B,EAAsC,KAAKI,aAA3C;EACD;AA1BY,CAAf","names":["SyntheticPlatformEmitter","assertSensorEventEnabledAsync","getPermissionsAsync","isSensorEnabledAsync","requestPermissionsAsync","eventName","name","isAvailableAsync","DeviceMotionEvent","_handleMotion","accelerationIncludingGravity","emit","x","y","z","startObserving","window","addEventListener","stopObserving","removeEventListener"],"sourceRoot":"","sources":["../src/ExponentGyroscope.web.ts"],"sourcesContent":["import { SyntheticPlatformEmitter } from 'expo-modules-core';\n\nimport {\n  assertSensorEventEnabledAsync,\n  getPermissionsAsync,\n  isSensorEnabledAsync,\n  requestPermissionsAsync,\n} from './utils/isSensorEnabledAsync.web';\n\nconst eventName = 'devicemotion';\n\nexport default {\n  get name(): string {\n    return 'ExponentGyroscope';\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof DeviceMotionEvent === 'undefined') {\n      return false;\n    }\n    return await isSensorEnabledAsync(eventName);\n  },\n  _handleMotion({ accelerationIncludingGravity }) {\n    SyntheticPlatformEmitter.emit('gyroscopeDidUpdate', {\n      x: accelerationIncludingGravity.x,\n      y: accelerationIncludingGravity.y,\n      z: accelerationIncludingGravity.z,\n    });\n  },\n  getPermissionsAsync,\n  requestPermissionsAsync,\n  startObserving() {\n    assertSensorEventEnabledAsync(eventName);\n\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}