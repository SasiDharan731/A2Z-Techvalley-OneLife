{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport { PermissionStatus, EventEmitter, Platform } from 'expo-modules-core';\n\nvar DeviceSensor = _createClass(function DeviceSensor(nativeSensorModule, nativeEventName) {\n  var _this = this;\n\n  _classCallCheck(this, DeviceSensor);\n\n  this.addListener = function (listener) {\n    var subscription = _this._nativeEmitter.addListener(_this._nativeEventName, listener);\n\n    subscription.remove = function () {\n      return _this.removeSubscription(subscription);\n    };\n\n    _this._listenerCount++;\n    return subscription;\n  };\n\n  this.hasListeners = function () {\n    return _this._listenerCount > 0;\n  };\n\n  this.getListenerCount = function () {\n    return _this._listenerCount;\n  };\n\n  this.removeAllListeners = function () {\n    _this._listenerCount = 0;\n\n    _this._nativeEmitter.removeAllListeners(_this._nativeEventName);\n  };\n\n  this.removeSubscription = function (subscription) {\n    _this._listenerCount--;\n\n    _this._nativeEmitter.removeSubscription(subscription);\n  };\n\n  this.setUpdateInterval = function (intervalMs) {\n    if (!_this._nativeModule.setUpdateInterval) {\n      console.warn(\"expo-sensors: setUpdateInterval() is not supported on \" + Platform.OS);\n    } else {\n      _this._nativeModule.setUpdateInterval(intervalMs);\n    }\n  };\n\n  this.isAvailableAsync = _asyncToGenerator(function* () {\n    if (!_this._nativeModule.isAvailableAsync) {\n      return false;\n    } else {\n      return yield _this._nativeModule.isAvailableAsync();\n    }\n  });\n  this.getPermissionsAsync = _asyncToGenerator(function* () {\n    if (!_this._nativeModule.getPermissionsAsync) {\n      return defaultPermissionsResponse;\n    } else {\n      return yield _this._nativeModule.getPermissionsAsync();\n    }\n  });\n  this.requestPermissionsAsync = _asyncToGenerator(function* () {\n    if (!_this._nativeModule.requestPermissionsAsync) {\n      return defaultPermissionsResponse;\n    } else {\n      return yield _this._nativeModule.requestPermissionsAsync();\n    }\n  });\n  this._nativeModule = nativeSensorModule;\n  this._nativeEmitter = new EventEmitter(nativeSensorModule);\n  this._nativeEventName = nativeEventName;\n  this._listenerCount = 0;\n});\n\nexport { DeviceSensor as default };\nvar defaultPermissionsResponse = {\n  granted: true,\n  expires: 'never',\n  canAskAgain: true,\n  status: PermissionStatus.GRANTED\n};","map":{"version":3,"mappings":";;;AAAA,SAEEA,gBAFF,EAGEC,YAHF,EAKEC,QALF,QAMO,mBANP;;IAgBqBC,Y,gBAMnB,sBAAYC,kBAAZ,EAAoDC,eAApD,EAA2E;EAAA;;EAAA;;EAAA,KAQ3EC,WAR2E,GAQ7D,UAACC,QAAD,EAAwC;IACpD,IAAMC,YAAY,GAAG,KAAI,CAACC,cAAL,CAAoBH,WAApB,CAAgC,KAAI,CAACI,gBAArC,EAAuDH,QAAvD,CAArB;;IACAC,YAAY,CAACG,MAAb,GAAsB;MAAA,OAAM,KAAI,CAACC,kBAAL,CAAwBJ,YAAxB,CAAN;IAAA,CAAtB;;IACA,KAAI,CAACK,cAAL;IACA,OAAOL,YAAP;EACD,CAb0E;;EAAA,KAe3EM,YAf2E,GAe5D,YAAc;IAC3B,OAAO,KAAI,CAACD,cAAL,GAAsB,CAA7B;EACD,CAjB0E;;EAAA,KAmB3EE,gBAnB2E,GAmBxD,YAAa;IAC9B,OAAO,KAAI,CAACF,cAAZ;EACD,CArB0E;;EAAA,KAuB3EG,kBAvB2E,GAuBtD,YAAW;IAC9B,KAAI,CAACH,cAAL,GAAsB,CAAtB;;IACA,KAAI,CAACJ,cAAL,CAAoBO,kBAApB,CAAuC,KAAI,CAACN,gBAA5C;EACD,CA1B0E;;EAAA,KA4B3EE,kBA5B2E,GA4BtD,UAACJ,YAAD,EAAqC;IACxD,KAAI,CAACK,cAAL;;IACA,KAAI,CAACJ,cAAL,CAAoBG,kBAApB,CAAuCJ,YAAvC;EACD,CA/B0E;;EAAA,KAiC3ES,iBAjC2E,GAiCvD,UAACC,UAAD,EAA6B;IAC/C,IAAI,CAAC,KAAI,CAACC,aAAL,CAAmBF,iBAAxB,EAA2C;MACzCG,OAAO,CAACC,IAAR,4DAAsEnB,QAAQ,CAACoB,EAA/E;IACD,CAFD,MAEO;MACL,KAAI,CAACH,aAAL,CAAmBF,iBAAnB,CAAqCC,UAArC;IACD;EACF,CAvC0E;;EAAA,KAyC3EK,gBAzC2E,qBAyCxD,aAA6B;IAC9C,IAAI,CAAC,KAAI,CAACJ,aAAL,CAAmBI,gBAAxB,EAA0C;MACxC,OAAO,KAAP;IACD,CAFD,MAEO;MACL,aAAa,KAAI,CAACJ,aAAL,CAAmBI,gBAAnB,EAAb;IACD;EACF,CA/C0E;EAAA,KAiD3EC,mBAjD2E,qBAiDrD,aAAwC;IAC5D,IAAI,CAAC,KAAI,CAACL,aAAL,CAAmBK,mBAAxB,EAA6C;MAC3C,OAAOC,0BAAP;IACD,CAFD,MAEO;MACL,aAAa,KAAI,CAACN,aAAL,CAAmBK,mBAAnB,EAAb;IACD;EACF,CAvD0E;EAAA,KAyD3EE,uBAzD2E,qBAyDjD,aAAwC;IAChE,IAAI,CAAC,KAAI,CAACP,aAAL,CAAmBO,uBAAxB,EAAiD;MAC/C,OAAOD,0BAAP;IACD,CAFD,MAEO;MACL,aAAa,KAAI,CAACN,aAAL,CAAmBO,uBAAnB,EAAb;IACD;EACF,CA/D0E;EACzE,KAAKP,aAAL,GAAqBf,kBAArB;EAEA,KAAKK,cAAL,GAAsB,IAAIR,YAAJ,CAAiBG,kBAAjB,CAAtB;EACA,KAAKM,gBAAL,GAAwBL,eAAxB;EACA,KAAKQ,cAAL,GAAsB,CAAtB;AACD,C;;SAZkBV,Y;AAwErB,IAAMsB,0BAA0B,GAAuB;EACrDE,OAAO,EAAE,IAD4C;EAErDC,OAAO,EAAE,OAF4C;EAGrDC,WAAW,EAAE,IAHwC;EAIrDC,MAAM,EAAE9B,gBAAgB,CAAC+B;AAJ4B,CAAvD","names":["PermissionStatus","EventEmitter","Platform","DeviceSensor","nativeSensorModule","nativeEventName","addListener","listener","subscription","_nativeEmitter","_nativeEventName","remove","removeSubscription","_listenerCount","hasListeners","getListenerCount","removeAllListeners","setUpdateInterval","intervalMs","_nativeModule","console","warn","OS","isAvailableAsync","getPermissionsAsync","defaultPermissionsResponse","requestPermissionsAsync","granted","expires","canAskAgain","status","GRANTED"],"sourceRoot":"","sources":["../src/DeviceSensor.ts"],"sourcesContent":["import {\n  PermissionResponse,\n  PermissionStatus,\n  EventEmitter,\n  Subscription,\n  Platform,\n} from 'expo-modules-core';\n\ntype Listener<E> = (event: E) => void;\n\ntype NativeSensorModule = any;\n\n/**\n * A base class for subscribable sensors. The events emitted by this class are measurements\n * specified by the parameter type `M`.\n */\nexport default class DeviceSensor<M> {\n  _nativeModule: NativeSensorModule;\n  _nativeEmitter: EventEmitter;\n  _nativeEventName: string;\n  _listenerCount: number;\n\n  constructor(nativeSensorModule: NativeSensorModule, nativeEventName: string) {\n    this._nativeModule = nativeSensorModule;\n\n    this._nativeEmitter = new EventEmitter(nativeSensorModule);\n    this._nativeEventName = nativeEventName;\n    this._listenerCount = 0;\n  }\n\n  addListener = (listener: Listener<M>): Subscription => {\n    const subscription = this._nativeEmitter.addListener(this._nativeEventName, listener);\n    subscription.remove = () => this.removeSubscription(subscription);\n    this._listenerCount++;\n    return subscription;\n  };\n\n  hasListeners = (): boolean => {\n    return this._listenerCount > 0;\n  };\n\n  getListenerCount = (): number => {\n    return this._listenerCount;\n  };\n\n  removeAllListeners = (): void => {\n    this._listenerCount = 0;\n    this._nativeEmitter.removeAllListeners(this._nativeEventName);\n  };\n\n  removeSubscription = (subscription: Subscription): void => {\n    this._listenerCount--;\n    this._nativeEmitter.removeSubscription(subscription);\n  };\n\n  setUpdateInterval = (intervalMs: number): void => {\n    if (!this._nativeModule.setUpdateInterval) {\n      console.warn(`expo-sensors: setUpdateInterval() is not supported on ${Platform.OS}`);\n    } else {\n      this._nativeModule.setUpdateInterval(intervalMs);\n    }\n  };\n\n  isAvailableAsync = async (): Promise<boolean> => {\n    if (!this._nativeModule.isAvailableAsync) {\n      return false;\n    } else {\n      return await this._nativeModule.isAvailableAsync();\n    }\n  };\n\n  getPermissionsAsync = async (): Promise<PermissionResponse> => {\n    if (!this._nativeModule.getPermissionsAsync) {\n      return defaultPermissionsResponse;\n    } else {\n      return await this._nativeModule.getPermissionsAsync();\n    }\n  };\n\n  requestPermissionsAsync = async (): Promise<PermissionResponse> => {\n    if (!this._nativeModule.requestPermissionsAsync) {\n      return defaultPermissionsResponse;\n    } else {\n      return await this._nativeModule.requestPermissionsAsync();\n    }\n  };\n}\n\nconst defaultPermissionsResponse: PermissionResponse = {\n  granted: true,\n  expires: 'never',\n  canAskAgain: true,\n  status: PermissionStatus.GRANTED,\n};\n"]},"metadata":{},"sourceType":"module"}