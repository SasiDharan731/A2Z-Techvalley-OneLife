{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { SyntheticPlatformEmitter } from 'expo-modules-core';\nimport { assertSensorEventEnabledAsync, getPermissionsAsync, isSensorEnabledAsync, requestPermissionsAsync } from \"./utils/isSensorEnabledAsync.web\";\nvar eventName = 'devicemotion';\nexport default {\n  get name() {\n    return 'ExponentDeviceMotion';\n  },\n\n  get Gravity() {\n    return 9.80665;\n  },\n\n  isAvailableAsync: function () {\n    var _isAvailableAsync = _asyncToGenerator(function* () {\n      if (typeof DeviceMotionEvent === 'undefined') {\n        return false;\n      }\n\n      return yield isSensorEnabledAsync(eventName);\n    });\n\n    function isAvailableAsync() {\n      return _isAvailableAsync.apply(this, arguments);\n    }\n\n    return isAvailableAsync;\n  }(),\n  _handleMotion: function _handleMotion(motion) {\n    SyntheticPlatformEmitter.emit('deviceMotionDidUpdate', {\n      acceleration: motion.acceleration,\n      accelerationIncludingGravity: motion.accelerationIncludingGravity,\n      interval: motion.interval,\n      rotationRate: motion.rotationRate,\n      orientation: window.orientation\n    });\n  },\n  getPermissionsAsync: getPermissionsAsync,\n  requestPermissionsAsync: requestPermissionsAsync,\n  startObserving: function startObserving() {\n    assertSensorEventEnabledAsync(eventName);\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving: function stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  }\n};","map":{"version":3,"mappings":";AAAA,SAASA,wBAAT,QAAyC,mBAAzC;AAEA,SACEC,6BADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,uBAJF;AAOA,IAAMC,SAAS,GAAG,cAAlB;AAEA,eAAe;EACb,IAAIC,IAAJ,GAAQ;IACN,OAAO,sBAAP;EACD,CAHY;;EAOb,IAAIC,OAAJ,GAAW;IACT,OAAO,OAAP;EACD,CATY;;EAUPC,gBAVO;IAAA,uDAUS;MACpB,IAAI,OAAOC,iBAAP,KAA6B,WAAjC,EAA8C;QAC5C,OAAO,KAAP;MACD;;MACD,aAAaN,oBAAoB,CAACE,SAAD,CAAjC;IACD,CAfY;;IAAA;MAAA;IAAA;;IAAA;EAAA;EAgBbK,aAhBa,yBAgBCC,MAhBD,EAgBO;IAElBX,wBAAwB,CAACY,IAAzB,CAA8B,uBAA9B,EAAuD;MACrDC,YAAY,EAAEF,MAAM,CAACE,YADgC;MAErDC,4BAA4B,EAAEH,MAAM,CAACG,4BAFgB;MAGrDC,QAAQ,EAAEJ,MAAM,CAACI,QAHoC;MAIrDC,YAAY,EAAEL,MAAM,CAACK,YAJgC;MAKrDC,WAAW,EAAEC,MAAM,CAACD;IALiC,CAAvD;EAOD,CAzBY;EA0Bbf,mBAAmB,EAAnBA,mBA1Ba;EA2BbE,uBAAuB,EAAvBA,uBA3Ba;EA4Bbe,cA5Ba,4BA4BC;IACZlB,6BAA6B,CAACI,SAAD,CAA7B;IAEAa,MAAM,CAACE,gBAAP,CAAwBf,SAAxB,EAAmC,KAAKK,aAAxC;EACD,CAhCY;EAiCbW,aAjCa,2BAiCA;IACXH,MAAM,CAACI,mBAAP,CAA2BjB,SAA3B,EAAsC,KAAKK,aAA3C;EACD;AAnCY,CAAf","names":["SyntheticPlatformEmitter","assertSensorEventEnabledAsync","getPermissionsAsync","isSensorEnabledAsync","requestPermissionsAsync","eventName","name","Gravity","isAvailableAsync","DeviceMotionEvent","_handleMotion","motion","emit","acceleration","accelerationIncludingGravity","interval","rotationRate","orientation","window","startObserving","addEventListener","stopObserving","removeEventListener"],"sourceRoot":"","sources":["../src/ExponentDeviceMotion.web.ts"],"sourcesContent":["import { SyntheticPlatformEmitter } from 'expo-modules-core';\n\nimport {\n  assertSensorEventEnabledAsync,\n  getPermissionsAsync,\n  isSensorEnabledAsync,\n  requestPermissionsAsync,\n} from './utils/isSensorEnabledAsync.web';\n\nconst eventName = 'devicemotion';\n\nexport default {\n  get name(): string {\n    return 'ExponentDeviceMotion';\n  },\n  /**\n   * Gravity on the planet this module supports (currently just Earth) represented as m/s^2.\n   */\n  get Gravity(): number {\n    return 9.80665;\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof DeviceMotionEvent === 'undefined') {\n      return false;\n    }\n    return await isSensorEnabledAsync(eventName);\n  },\n  _handleMotion(motion) {\n    // TODO: Bacon: Can rotation be calculated?\n    SyntheticPlatformEmitter.emit('deviceMotionDidUpdate', {\n      acceleration: motion.acceleration,\n      accelerationIncludingGravity: motion.accelerationIncludingGravity,\n      interval: motion.interval,\n      rotationRate: motion.rotationRate,\n      orientation: window.orientation,\n    });\n  },\n  getPermissionsAsync,\n  requestPermissionsAsync,\n  startObserving() {\n    assertSensorEventEnabledAsync(eventName);\n\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}