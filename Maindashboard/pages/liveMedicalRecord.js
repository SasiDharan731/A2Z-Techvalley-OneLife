import React from 'react'
import Head from 'next/head'
import Image from 'next/image'
// import styles from '../styles/Home.module.css'
import styles from '../styles/liveMedicalRecord.module.css'
import mypic from '../public/blackboxgraph.png'
import home from '../public/home.png'
import notf from '../public/notf.png'
import search from '../public/search.png'
import prof from '../public/prof.png'
import done from '../public/done.png'
import axios from 'axios'
import {useState, useEffect} from 'react'
import { create } from "ipfs-http-client";
import Link from 'next/link'

function liveMedicalRecord() {

  async function ipfsClient() {
    const ipfs = await create(
        {
            host: "localhost",
            port: 5001,
            protocol: "http"
        }
    );
    return ipfs;
  }


  async function saveText(data) {
    let ipfs = await ipfsClient();

    try {
      const uploadResult = await ipfs.add(data)
      console.log(uploadResult);
     
  } catch(e) {
      console.log(e)
    
      return
  }
}


  const [refreshToken, setRefreshToken] = useState(Math.random());
  const [pulseRate, setPulseRate] = useState()
  const [bp, setbp] = useState()
  const [spo, setspo] = useState()
  const [ibp, setibp] = useState()
  const [resp, setresp] = useState()
  
  useEffect(() => {
    axios.get("http://localhost:9000/pulse")
      .then((data) => {
            setPulseRate(data.data.data)
            console.log(pulseRate);
            saveText({"pulseRate" : pulseRate});
      })
      .finally(() => {
        // Update refreshToken after 3 seconds so this event will re-trigger and update the data
        setTimeout(() => setRefreshToken(Math.random()), 1000);
      });
  }, [refreshToken]);

  useEffect(() => {
    axios.get("http://localhost:9000/bpm")
      .then((data) => {
            setbp(data.data.data)
            console.log(pulseRate);
      })
      .finally(() => {
        // Update refreshToken after 3 seconds so this event will re-trigger and update the data
        setTimeout(() => setRefreshToken(Math.random()), 1000);
      });
  }, [refreshToken]);

  useEffect(() => {
    axios.get("http://localhost:9000/spo2")
      .then((data) => {
            setspo(data.data.data)
            console.log(pulseRate);
      })
      .finally(() => {
        // Update refreshToken after 3 seconds so this event will re-trigger and update the data
        setTimeout(() => setRefreshToken(Math.random()), 1000);
      });
  }, [refreshToken]);

  useEffect(() => {
    axios.get("http://localhost:9000/ibp")
      .then((data) => {
            setibp(data.data.data)
            console.log(pulseRate);
      })
      .finally(() => {
        // Update refreshToken after 3 seconds so this event will re-trigger and update the data
        setTimeout(() => setRefreshToken(Math.random()), 1000);
      });
  }, [refreshToken]);

  useEffect(() => {
    axios.get("http://localhost:9000/res")
      .then((data) => {
            setresp(data.data.data)
            console.log(pulseRate);
      })
      .finally(() => {
        // Update refreshToken after 3 seconds so this event will re-trigger and update the data
        setTimeout(() => setRefreshToken(Math.random()), 1000);
      });
  }, [refreshToken]);

  return (
    <div className={styles.container}>

    <Head>
        <title>Emergent</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
    </Head>
       
      <div className={styles.Topbar} >

            <div className={styles.Searchbox}>

              <div className={styles.homebox3}>
                <Image
                    src={search}
                />
              </div>
              
              <p  className={styles.Searchboxtext}>Search</p>
            </div>


     <div className={styles.Topbar2}>

             <Link href="/"><div className={styles.homebox}> 
             <Image
             src={home}
             />
             </div></Link>

             <div className={styles.homebox2}>
              <Image
              src={notf}
              />
              
               </div>
               <div className={styles.homebox4}>
                <Image
                src={prof}
                />
               </div>
             <p className={styles.hometxt}>Surya Narayanan</p>
             <div className={styles.homebox2}> 
             <Image
             src={done}
             />
             </div>

     </div>
            
    </div>

    <div className={styles.backgroundBox}>
        <h1 className={styles.heading}>Live Health Data</h1>

        <div className={styles.dataGrid}>
            <div className={styles.liveDataCard}>
                <div className={styles.flexRow}>
                    <div className={styles.dataName}>Pulse Rate</div>
                    <div className={styles.dataTime}>07-DEC-2021</div>
                </div>

                <div className={styles.recordID}>Record ID: 2200228447</div>

                <div className={styles.liveData}>{pulseRate}/min</div>
                <div className={styles.liveDataActual}>74/min</div>
            </div>

            <div className={styles.liveDataCard}>
                <div className={styles.flexRow}>
                    <div className={styles.dataName}>ECB (bpm)</div>
                    <div className={styles.dataTime}>07-DEC-2021</div>
                </div>

                <div className={styles.recordID}>Record ID: 2200228447</div>

                <div className={styles.liveData}>{bp}</div>
                <div className={styles.liveDataActual}>74/min</div>
            </div>

            <div className={styles.liveDataCard}>
                <div className={styles.flexRow}>
                    <div className={styles.dataName}>SpO2</div>
                    <div className={styles.dataTime}>07-DEC-2021</div>
                </div>

                <div className={styles.recordID}>Record ID: 2200228447</div>

                <div className={styles.liveData}>{spo}</div>
                <div className={styles.liveDataActual}></div>
            </div>

            <div className={styles.liveDataCard}>
                <div className={styles.flexRow}>
                    <div className={styles.dataName}>IBP</div>
                    <div className={styles.dataTime}>07-DEC-2021</div>
                </div>

                <div className={styles.recordID}>Record ID: 2200228447</div>

                <div className={styles.liveData}>{ibp}/80</div>
                <div className={styles.liveDataActual}>93mmHg</div>
            </div>

            <div className={styles.liveDataCard}>
                <div className={styles.flexRow}>
                    <div className={styles.dataName}>RESP</div>
                    <div className={styles.dataTime}>07-DEC-2021</div>
                </div>

                <div className={styles.recordID}>Record ID: 2200228447</div>

                <div className={styles.liveData}>{resp}</div>
                <div className={styles.liveDataActual}></div>
            </div>
        </div>
    </div>

    </div>
  )
}

export default liveMedicalRecord